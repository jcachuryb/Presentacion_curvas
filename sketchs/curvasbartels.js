function drawCurvasBartelsScript(){
   // Simple way to attach js code to the canvas is by using a function
  function sketchProc($p) {
    var nSegmentos =  100;
    var t =  -2; 
    var b = -5; 
    var c = 5; 
    var mode=1;
    var numPoints =  6;
    var ep =  10; 
    var locked =  []; 
    var overPoint =  [];
    var bx =  [];
    var by =  [];
    var xOffset =  [];
    var yOffset =  [];
    var s =  (1-t)/2;

    function setup() {
      $p.size(800, 600);  
      $p.noSmooth();  
      for(var i = 0;  i<numPoints;  i++) {
        bx[i] = 800.0/(numPoints+1)*(i+1);
        by[i] = $p.random()*400 + 100;
      }
    }
    $p.setup = setup;
    setup = setup.bind($p);

    function draw() {
      $p.background(255);  
      modoBartels();
    }
    $p.draw = draw;
    draw = draw.bind($p);

 // this code was autogenerated from PJS


function modoBartels() {
 var xa = 0;
 var ya = 0;  
 $p.stroke(100, 200, 100);
 $p.strokeWeight(8);  
 $p.point(bx[0], by[0]);  
 $p.point(bx[1], by[1]);  
 for(var i = 1;  i<numPoints-2;  i++ ) {
  for(var u = 0; u<=1.0; u+=1.0/nSegmentos){
    if(u==0.0){
      $p.stroke(100, 200, 100);
      $p.strokeWeight(8);
      xa=bx[i];
      ya=by[i];
    }else{
      var dkx =  (1/2) * (1-t) *(((1+b)*(1-c)*(bx[i] - bx[i-1]))  +  ((1-b)*(1+c)*(bx[i+1] - bx[i])));
      var dky =  (1/2) * (1-t) *(((1+b)*(1-c)*(by[i] - by[i-1]))  +  ((1-b)*(1+c)*(by[i+1] - by[i])));  

      var dk1x =  (1/2) *(((1+b)*(1+c)*(bx[i+1] - bx[i]))  +  ((1-b)*(1-c)*(bx[i+2] - bx[i+1])));
      var dk1y =  (1/2) *(((1+b)*(1+c)*(by[i+1] - by[i]))  +  ((1-b)*(1-c)*(by[i+2] - by[i+1])));

      var x = (bx[i] * H0(u)) + (bx[i+1] * H1(u)) + (dkx * H2(u)) + (dk1x * H3(u));
      var y = (by[i] * H0(u)) + (by[i+1] * H1(u)) + (dky * H2(u)) + (dk1y * H3(u));
        $p.stroke(255, 0, 0);
        $p.strokeWeight(2);
        $p.line(xa,ya,x,y);
         
        $p.stroke(0);
        $p.strokeWeight(8);
        xa=x;
        ya=y;
      }
    }
    $p.stroke(255, 0, 0);
    $p.strokeWeight(2);
    $p.line(xa,ya,bx[i+1], by[i+1]);
    $p.stroke(100, 200, 100);
    $p.strokeWeight(8);
    $p.point(bx[i+2], by[i+2]);
  }
}
$p.modoBartels = modoBartels;
modoBartels = modoBartels.bind($p);

function H0(u) {
  var r =  ((2*$p.pow(u,3)) - (3*$p.pow(u,2)) + (1));
  return r;
}
    $p.H0 = H0;
    H0 = H0.bind($p);

    function H1(u) {
    var r =  ((-2*$p.pow(u,3)) + (3*$p.pow(u,2)));
    return r;
    }
    $p.H1 = H1;
    H1 = H1.bind($p);

    function H2(u) {
      var r =  (($p.pow(u,3)) - (2*$p.pow(u,2)) + (u));
      return r;
    }
    $p.H2 = H2;
    H2 = H2.bind($p);

    function H3(u) {
      var r =  (($p.pow(u,3)) - ($p.pow(u,2)));
      return r;
    }
    $p.H3 = H3;
    H3 = H3.bind($p);

    function mousePressed(){


    }
    $p.mousePressed = mousePressed;
    mousePressed = mousePressed.bind($p);


}


  var canvas = document.getElementById("canvas3");
  // attaching the sketchProc function to the canvas
  var p = new Processing(canvas, sketchProc);
  // p.exit(); to detach it
}